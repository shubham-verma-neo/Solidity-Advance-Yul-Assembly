{
	"id": "183c27463f6b64611b4e0da3585d78ce",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/2_BasicOperation.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract BasicOperation {\n    function isPrime(uint256 num) public pure returns (bool result) {\n        result = true;\n        assembly {\n            let halfNum := add(div(num, 2), 1)\n            let i := 2\n            for {\n\n            } lt(i, halfNum) {\n                i := add(i, 1)\n            } {\n                // if eq(mod(num, i), 0) {\n                if iszero(mod(num, i)) {\n                    result := 0\n                    break\n                }\n            }\n        }\n    }\n\n    function test() external pure {\n        require(isPrime(2));\n        require(isPrime(3));\n        require(!isPrime(4));\n        require(!isPrime(15));\n    }\n}\n\ncontract IfComparison {\n    function isTruthy() external pure returns (uint256 result) {\n        result = 1;\n\n        assembly {\n            if 2 {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function isFalsy() external pure returns (uint256 result) {\n        result = 1;\n        assembly {\n            if 0 {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function negation() external pure returns (uint256 result) {\n        result = 1;\n        assembly {\n            if iszero(0) {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function unsafe1NegationPart1() external pure returns (uint256 result) {\n        result = 1;\n        assembly {\n            if not(0) {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function btFlip() external pure returns (bytes32 result) {\n        assembly {\n            result := not(2)\n        }\n        return result;\n    }\n\n    function unsafe2NegationPart2() external pure returns (uint256 result) {\n        result = 1;\n        assembly {\n            if not(2) {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function safeNegation() external pure returns (uint256 result) {\n        result = 1;\n        assembly {\n            if iszero(2) {\n                result := 2\n            }\n        }\n        return result;\n    }\n\n    function max(uint256 x, uint256 y) external pure returns (uint256 maximum) {\n        assembly {\n            if lt(x, y) {\n                maximum := y\n            }\n            if iszero(lt(x, y)) {\n                //there is no else statements\n                maximum := x\n            }\n        }\n        return maximum;\n    }\n\n    // The rest:\n    /*\n        |  solidity   |    YUL    |\n        +-------------+-----------+\n        |   a && b    | and(a,b)  |\n        +-------------+-----------+\n        |   a || b    | or(a, b)  |\n        +-------------+-----------+\n        |   a ^ b     | xor(a, b) |\n        +-------------+-----------+\n        |   a + b     | add(a, b) |\n        +-------------+-----------+\n        |   a - b     | sub(a, b) |\n        +-------------+-----------+\n        |   a * b     | mul(a, b) |\n        +-------------+-----------+\n        |   a / b     | div(a, b) |\n        +-------------+-----------+\n        |   a % b     | mod(a, b) |\n        +-------------+-----------+\n        |   a >> b    | shr(a, b) |\n        +-------------+-----------+\n        |   a << b    | shl(a, b) |\n        +-------------+-----------+\n        \n        https://docs.soliditylang.org/en/v0.6.2/yul.html\n    */\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/2_BasicOperation.sol": {
				"BasicOperation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "isPrime",
							"outputs": [
								{
									"internalType": "bool",
									"name": "result",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/2_BasicOperation.sol\":57:715  contract BasicOperation {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/2_BasicOperation.sol\":57:715  contract BasicOperation {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42703494\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/2_BasicOperation.sol\":87:551  function isPrime(uint256 num) public pure returns (bool result) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":557:713  function test() external pure {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/2_BasicOperation.sol\":87:551  function isPrime(uint256 num) public pure returns (bool result) {... */\n    tag_8:\n        /* \"contracts/2_BasicOperation.sol\":138:149  bool result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":170:174  true */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":161:174  result = true */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":239:240  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":235:236  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":230:233  num */\n      dup4\n        /* \"contracts/2_BasicOperation.sol\":226:237  div(num, 2) */\n      div\n        /* \"contracts/2_BasicOperation.sol\":222:241  add(div(num, 2), 1) */\n      add\n        /* \"contracts/2_BasicOperation.sol\":263:264  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":277:535  for {... */\n    tag_14:\n        /* \"contracts/2_BasicOperation.sol\":304:311  halfNum */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":301:302  i */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":298:312  lt(i, halfNum) */\n      lt\n        /* \"contracts/2_BasicOperation.sol\":277:535  for {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":440:441  i */\n      dup1\n        /* \"contracts/2_BasicOperation.sol\":435:438  num */\n      dup5\n        /* \"contracts/2_BasicOperation.sol\":431:442  mod(num, i) */\n      mod\n        /* \"contracts/2_BasicOperation.sol\":421:521  if iszero(mod(num, i)) {... */\n      tag_17\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":476:477  0 */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":466:477  result := 0 */\n      swap3\n      pop\n        /* \"contracts/2_BasicOperation.sol\":498:503  break */\n      jump(tag_16)\n        /* \"contracts/2_BasicOperation.sol\":421:521  if iszero(mod(num, i)) {... */\n    tag_17:\n        /* \"contracts/2_BasicOperation.sol\":343:344  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":340:341  i */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":336:345  add(i, 1) */\n      add\n        /* \"contracts/2_BasicOperation.sol\":331:345  i := add(i, 1) */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":277:535  for {... */\n      jump(tag_14)\n    tag_16:\n        /* \"contracts/2_BasicOperation.sol\":193:545  {... */\n      pop\n      pop\n        /* \"contracts/2_BasicOperation.sol\":87:551  function isPrime(uint256 num) public pure returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":557:713  function test() external pure {... */\n    tag_12:\n        /* \"contracts/2_BasicOperation.sol\":605:615  isPrime(2) */\n      tag_19\n        /* \"contracts/2_BasicOperation.sol\":613:614  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":605:612  isPrime */\n      tag_8\n        /* \"contracts/2_BasicOperation.sol\":605:615  isPrime(2) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/2_BasicOperation.sol\":597:616  require(isPrime(2)) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/2_BasicOperation.sol\":634:644  isPrime(3) */\n      tag_21\n        /* \"contracts/2_BasicOperation.sol\":642:643  3 */\n      0x03\n        /* \"contracts/2_BasicOperation.sol\":634:641  isPrime */\n      tag_8\n        /* \"contracts/2_BasicOperation.sol\":634:644  isPrime(3) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/2_BasicOperation.sol\":626:645  require(isPrime(3)) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"contracts/2_BasicOperation.sol\":664:674  isPrime(4) */\n      tag_23\n        /* \"contracts/2_BasicOperation.sol\":672:673  4 */\n      0x04\n        /* \"contracts/2_BasicOperation.sol\":664:671  isPrime */\n      tag_8\n        /* \"contracts/2_BasicOperation.sol\":664:674  isPrime(4) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/2_BasicOperation.sol\":663:674  !isPrime(4) */\n      iszero\n        /* \"contracts/2_BasicOperation.sol\":655:675  require(!isPrime(4)) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"contracts/2_BasicOperation.sol\":694:705  isPrime(15) */\n      tag_25\n        /* \"contracts/2_BasicOperation.sol\":702:704  15 */\n      0x0f\n        /* \"contracts/2_BasicOperation.sol\":694:701  isPrime */\n      tag_8\n        /* \"contracts/2_BasicOperation.sol\":694:705  isPrime(15) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/2_BasicOperation.sol\":693:705  !isPrime(15) */\n      iszero\n        /* \"contracts/2_BasicOperation.sol\":685:706  require(!isPrime(15)) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"contracts/2_BasicOperation.sol\":557:713  function test() external pure {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_30:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_31:\n        /* \"#utility.yul\":490:514   */\n      tag_41\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_42:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_32:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_44\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_47\n      tag_28\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":766:885   */\n    tag_46:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_48\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_33:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_34:\n        /* \"#utility.yul\":1202:1223   */\n      tag_51\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_33\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_10:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_53\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063c4b2b3fd79cfc7c1447ef65eb2430afbf3c6695d7b7871f76833fd139f486c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063427034941461003b578063f8a8fd6d1461006b575b600080fd5b6100556004803603810190610050919061013a565b610075565b6040516100629190610182565b60405180910390f35b6100736100af565b005b6000600190506001600283040160025b818110156100a85780840661009d57600092506100a8565b600181019050610085565b5050919050565b6100b96002610075565b6100c257600080fd5b6100cc6003610075565b6100d557600080fd5b6100df6004610075565b156100e957600080fd5b6100f3600f610075565b156100fd57600080fd5b565b600080fd5b6000819050919050565b61011781610104565b811461012257600080fd5b50565b6000813590506101348161010e565b92915050565b6000602082840312156101505761014f6100ff565b5b600061015e84828501610125565b91505092915050565b60008115159050919050565b61017c81610167565b82525050565b60006020820190506101976000830184610173565b9291505056fea264697066735822122063c4b2b3fd79cfc7c1447ef65eb2430afbf3c6695d7b7871f76833fd139f486c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42703494 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP4 DIV ADD PUSH1 0x2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8 JUMPI DUP1 DUP5 MOD PUSH2 0x9D JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x85 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x2 PUSH2 0x75 JUMP JUMPDEST PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH1 0x3 PUSH2 0x75 JUMP JUMPDEST PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF PUSH1 0x4 PUSH2 0x75 JUMP JUMPDEST ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH1 0xF PUSH2 0x75 JUMP JUMPDEST ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117 DUP2 PUSH2 0x104 JUMP JUMPDEST DUP2 EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134 DUP2 PUSH2 0x10E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14F PUSH2 0xFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E DUP5 DUP3 DUP6 ADD PUSH2 0x125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC4B2B3FD PUSH26 0xCFC7C1447EF65EB2430AFBF3C6695D7B7871F76833FD139F486C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:658:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isPrime_14": {
									"entryPoint": 117,
									"id": 14,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@test_44": {
									"entryPoint": 175,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1449:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1025:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1180:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1168:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1121:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1300:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1323:4:1",
														"type": ""
													}
												],
												"src": "1236:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063427034941461003b578063f8a8fd6d1461006b575b600080fd5b6100556004803603810190610050919061013a565b610075565b6040516100629190610182565b60405180910390f35b6100736100af565b005b6000600190506001600283040160025b818110156100a85780840661009d57600092506100a8565b600181019050610085565b5050919050565b6100b96002610075565b6100c257600080fd5b6100cc6003610075565b6100d557600080fd5b6100df6004610075565b156100e957600080fd5b6100f3600f610075565b156100fd57600080fd5b565b600080fd5b6000819050919050565b61011781610104565b811461012257600080fd5b50565b6000813590506101348161010e565b92915050565b6000602082840312156101505761014f6100ff565b5b600061015e84828501610125565b91505092915050565b60008115159050919050565b61017c81610167565b82525050565b60006020820190506101976000830184610173565b9291505056fea264697066735822122063c4b2b3fd79cfc7c1447ef65eb2430afbf3c6695d7b7871f76833fd139f486c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42703494 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xAF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP4 DIV ADD PUSH1 0x2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA8 JUMPI DUP1 DUP5 MOD PUSH2 0x9D JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x85 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x2 PUSH2 0x75 JUMP JUMPDEST PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH1 0x3 PUSH2 0x75 JUMP JUMPDEST PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF PUSH1 0x4 PUSH2 0x75 JUMP JUMPDEST ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3 PUSH1 0xF PUSH2 0x75 JUMP JUMPDEST ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117 DUP2 PUSH2 0x104 JUMP JUMPDEST DUP2 EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134 DUP2 PUSH2 0x10E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150 JUMPI PUSH2 0x14F PUSH2 0xFF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E DUP5 DUP3 DUP6 ADD PUSH2 0x125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC4B2B3FD PUSH26 0xCFC7C1447EF65EB2430AFBF3C6695D7B7871F76833FD139F486C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:658:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;557:156;;;:::i;:::-;;87:464;138:11;170:4;161:13;;239:1;235;230:3;226:11;222:19;263:1;277:258;304:7;301:1;298:14;277:258;;;440:1;435:3;431:11;421:100;;476:1;466:11;;498:5;;421:100;343:1;340;336:9;331:14;;277:258;;;193:352;;87:464;;;:::o;557:156::-;605:10;613:1;605:7;:10::i;:::-;597:19;;;;;;634:10;642:1;634:7;:10::i;:::-;626:19;;;;;;664:10;672:1;664:7;:10::i;:::-;663:11;655:20;;;;;;694:11;702:2;694:7;:11::i;:::-;693:12;685:21;;;;;;557:156::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "93400",
								"executionCost": "141",
								"totalCost": "93541"
							},
							"external": {
								"isPrime(uint256)": "infinite",
								"test()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 715,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 715,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063c4b2b3fd79cfc7c1447ef65eb2430afbf3c6695d7b7871f76833fd139f486c64736f6c63430008110033",
									".code": [
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "42703494"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 87,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 87,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 87,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 557,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 557,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 557,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 87,
											"end": 551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 161,
											"end": 174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 161,
											"end": 174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 226,
											"end": 237,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 222,
											"end": 241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 277,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 298,
											"end": 312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 277,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 277,
											"end": 535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 431,
											"end": 442,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 476,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 503,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 521,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 421,
											"end": 521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 336,
											"end": 345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 277,
											"end": 535,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 277,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 193,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 87,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 557,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 605,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 605,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 605,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 642,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 634,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 634,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 634,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 664,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 672,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 664,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 664,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 655,
											"end": 675,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 655,
											"end": 675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 694,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 705,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 685,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 685,
											"end": 706,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 685,
											"end": 706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/2_BasicOperation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isPrime(uint256)": "42703494",
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"isPrime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/2_BasicOperation.sol\":\"BasicOperation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/2_BasicOperation.sol\":{\"keccak256\":\"0x2a89e222145412e66a155da3824252a8889a8fe388ff5d61fc8842c709680413\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b124a291341c11f7e73a321079ab36fca8448d67242ecabed4b8117adced148\",\"dweb:/ipfs/QmRHhKpFxFvhPRwKtXN5qDGPaJtgFSUaj6TQk9YoHszv8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IfComparison": {
					"abi": [
						{
							"inputs": [],
							"name": "btFlip",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "result",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFalsy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isTruthy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "y",
									"type": "uint256"
								}
							],
							"name": "max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maximum",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "negation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "safeNegation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unsafe1NegationPart1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unsafe2NegationPart2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/2_BasicOperation.sol\":717:3399  contract IfComparison {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/2_BasicOperation.sol\":717:3399  contract IfComparison {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a42e16c\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8a42e16c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xaa40eb14\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf3893f27\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc27de12\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x336c96f8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x41f563e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f0d90c6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d5433e6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/2_BasicOperation.sol\":1155:1362  function negation() external pure returns (uint256 result) {... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":745:945  function isTruthy() external pure returns (uint256 result) {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":951:1149  function isFalsy() external pure returns (uint256 result) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":2180:2507  function max(uint256 x, uint256 y) external pure returns (uint256 maximum) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":1590:1735  function btFlip() external pure returns (bytes32 result) {... */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":1741:1957  function unsafe2NegationPart2() external pure returns (uint256 result) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":1368:1584  function unsafe1NegationPart1() external pure returns (uint256 result) {... */\n    tag_9:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":1963:2174  function safeNegation() external pure returns (uint256 result) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_BasicOperation.sol\":1155:1362  function negation() external pure returns (uint256 result) {... */\n    tag_13:\n        /* \"contracts/2_BasicOperation.sol\":1198:1212  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1233:1234  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":1224:1234  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1277:1278  0 */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1267:1323  if iszero(0) {... */\n      tag_41\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":1308:1309  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1298:1309  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1267:1323  if iszero(0) {... */\n    tag_41:\n        /* \"contracts/2_BasicOperation.sol\":1155:1362  function negation() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":745:945  function isTruthy() external pure returns (uint256 result) {... */\n    tag_17:\n        /* \"contracts/2_BasicOperation.sol\":788:802  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":823:824  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":814:824  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":861:862  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":858:906  if 2 {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":891:892  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":881:892  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":858:906  if 2 {... */\n    tag_43:\n        /* \"contracts/2_BasicOperation.sol\":745:945  function isTruthy() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":951:1149  function isFalsy() external pure returns (uint256 result) {... */\n    tag_20:\n        /* \"contracts/2_BasicOperation.sol\":993:1007  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1028:1029  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":1019:1029  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1065:1066  0 */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1062:1110  if 0 {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":1095:1096  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1085:1096  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1062:1110  if 0 {... */\n    tag_45:\n        /* \"contracts/2_BasicOperation.sol\":951:1149  function isFalsy() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":2180:2507  function max(uint256 x, uint256 y) external pure returns (uint256 maximum) {... */\n    tag_25:\n        /* \"contracts/2_BasicOperation.sol\":2238:2253  uint256 maximum */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":2297:2298  y */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":2294:2295  x */\n      dup4\n        /* \"contracts/2_BasicOperation.sol\":2291:2299  lt(x, y) */\n      lt\n        /* \"contracts/2_BasicOperation.sol\":2288:2344  if lt(x, y) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":2329:2330  y */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":2318:2330  maximum := y */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":2288:2344  if lt(x, y) {... */\n    tag_47:\n        /* \"contracts/2_BasicOperation.sol\":2373:2374  y */\n      dup2\n        /* \"contracts/2_BasicOperation.sol\":2370:2371  x */\n      dup4\n        /* \"contracts/2_BasicOperation.sol\":2367:2375  lt(x, y) */\n      lt\n        /* \"contracts/2_BasicOperation.sol\":2357:2467  if iszero(lt(x, y)) {... */\n      tag_48\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":2452:2453  x */\n      dup3\n        /* \"contracts/2_BasicOperation.sol\":2441:2453  maximum := x */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":2357:2467  if iszero(lt(x, y)) {... */\n    tag_48:\n        /* \"contracts/2_BasicOperation.sol\":2180:2507  function max(uint256 x, uint256 y) external pure returns (uint256 maximum) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":1590:1735  function btFlip() external pure returns (bytes32 result) {... */\n    tag_28:\n        /* \"contracts/2_BasicOperation.sol\":1631:1645  bytes32 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1694:1695  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1690:1696  not(2) */\n      not\n        /* \"contracts/2_BasicOperation.sol\":1680:1696  result := not(2) */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1590:1735  function btFlip() external pure returns (bytes32 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":1741:1957  function unsafe2NegationPart2() external pure returns (uint256 result) {... */\n    tag_32:\n        /* \"contracts/2_BasicOperation.sol\":1796:1810  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1831:1832  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":1822:1832  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1872:1873  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1868:1874  not(2) */\n      not\n        /* \"contracts/2_BasicOperation.sol\":1865:1918  if not(2) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":1903:1904  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1893:1904  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1865:1918  if not(2) {... */\n    tag_51:\n        /* \"contracts/2_BasicOperation.sol\":1741:1957  function unsafe2NegationPart2() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":1368:1584  function unsafe1NegationPart1() external pure returns (uint256 result) {... */\n    tag_35:\n        /* \"contracts/2_BasicOperation.sol\":1423:1437  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1458:1459  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":1449:1459  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1499:1500  0 */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":1495:1501  not(0) */\n      not\n        /* \"contracts/2_BasicOperation.sol\":1492:1545  if not(0) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":1530:1531  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":1520:1531  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":1492:1545  if not(0) {... */\n    tag_53:\n        /* \"contracts/2_BasicOperation.sol\":1368:1584  function unsafe1NegationPart1() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_BasicOperation.sol\":1963:2174  function safeNegation() external pure returns (uint256 result) {... */\n    tag_38:\n        /* \"contracts/2_BasicOperation.sol\":2010:2024  uint256 result */\n      0x00\n        /* \"contracts/2_BasicOperation.sol\":2045:2046  1 */\n      0x01\n        /* \"contracts/2_BasicOperation.sol\":2036:2046  result = 1 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":2089:2090  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":2079:2135  if iszero(2) {... */\n      tag_55\n      jumpi\n        /* \"contracts/2_BasicOperation.sol\":2120:2121  2 */\n      0x02\n        /* \"contracts/2_BasicOperation.sol\":2110:2121  result := 2 */\n      swap1\n      pop\n        /* \"contracts/2_BasicOperation.sol\":2079:2135  if iszero(2) {... */\n    tag_55:\n        /* \"contracts/2_BasicOperation.sol\":1963:2174  function safeNegation() external pure returns (uint256 result) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_56:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_57:\n        /* \"#utility.yul\":177:201   */\n      tag_68\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_56\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_70\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_57\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_59:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_61:\n        /* \"#utility.yul\":842:866   */\n      tag_75\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_56\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_76:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_62:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_78\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_61\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1516   */\n    tag_24:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1167:1169   */\n      0x40\n        /* \"#utility.yul\":1155:1164   */\n      dup4\n        /* \"#utility.yul\":1146:1153   */\n      dup6\n        /* \"#utility.yul\":1142:1165   */\n      sub\n        /* \"#utility.yul\":1138:1170   */\n      slt\n        /* \"#utility.yul\":1135:1254   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1173:1252   */\n      tag_81\n      tag_59\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1135:1254   */\n    tag_80:\n        /* \"#utility.yul\":1293:1294   */\n      0x00\n        /* \"#utility.yul\":1318:1371   */\n      tag_82\n        /* \"#utility.yul\":1363:1370   */\n      dup6\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1343:1352   */\n      dup7\n        /* \"#utility.yul\":1339:1361   */\n      add\n        /* \"#utility.yul\":1318:1371   */\n      tag_62\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1308:1371   */\n      swap3\n      pop\n        /* \"#utility.yul\":1264:1381   */\n      pop\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1446:1499   */\n      tag_83\n        /* \"#utility.yul\":1491:1498   */\n      dup6\n        /* \"#utility.yul\":1482:1488   */\n      dup3\n        /* \"#utility.yul\":1471:1480   */\n      dup7\n        /* \"#utility.yul\":1467:1489   */\n      add\n        /* \"#utility.yul\":1446:1499   */\n      tag_62\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1436:1499   */\n      swap2\n      pop\n        /* \"#utility.yul\":1391:1509   */\n      pop\n        /* \"#utility.yul\":1042:1516   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1599   */\n    tag_63:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1588:1593   */\n      dup2\n        /* \"#utility.yul\":1577:1593   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1605:1723   */\n    tag_64:\n        /* \"#utility.yul\":1692:1716   */\n      tag_86\n        /* \"#utility.yul\":1710:1715   */\n      dup2\n        /* \"#utility.yul\":1692:1716   */\n      tag_63\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1687:1690   */\n      dup3\n        /* \"#utility.yul\":1680:1717   */\n      mstore\n        /* \"#utility.yul\":1605:1723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1951   */\n    tag_30:\n        /* \"#utility.yul\":1822:1826   */\n      0x00\n        /* \"#utility.yul\":1860:1862   */\n      0x20\n        /* \"#utility.yul\":1849:1858   */\n      dup3\n        /* \"#utility.yul\":1845:1863   */\n      add\n        /* \"#utility.yul\":1837:1863   */\n      swap1\n      pop\n        /* \"#utility.yul\":1873:1944   */\n      tag_88\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1930:1939   */\n      dup4\n        /* \"#utility.yul\":1926:1943   */\n      add\n        /* \"#utility.yul\":1917:1923   */\n      dup5\n        /* \"#utility.yul\":1873:1944   */\n      tag_64\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1729:1951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c0630a22fc62283c3846170be7191cababf9dc3e09171897d218b8107b747ca464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610345806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638a42e16c1161005b5780638a42e16c14610117578063aa40eb1414610135578063f3893f2714610153578063fc27de121461017157610088565b8063336c96f81461008d57806341f563e3146100ab5780635f0d90c6146100c95780636d5433e6146100e7575b600080fd5b61009561018f565b6040516100a2919061024f565b60405180910390f35b6100b36101a3565b6040516100c0919061024f565b60405180910390f35b6100d16101b8565b6040516100de919061024f565b60405180910390f35b61010160048036038101906100fc919061029b565b6101cd565b60405161010e919061024f565b60405180910390f35b61011f6101ec565b60405161012c91906102f4565b60405180910390f35b61013d6101f6565b60405161014a919061024f565b60405180910390f35b61015b61020c565b604051610168919061024f565b60405180910390f35b610179610222565b604051610186919061024f565b60405180910390f35b60006001905060006101a057600290505b90565b6000600190506002156101b557600290505b90565b6000600190506000156101ca57600290505b90565b6000818310156101db578190505b8183106101e6578290505b92915050565b6000600219905090565b6000600190506002191561020957600290505b90565b6000600190506000191561021f57600290505b90565b600060019050600261023357600290505b90565b6000819050919050565b61024981610236565b82525050565b60006020820190506102646000830184610240565b92915050565b600080fd5b61027881610236565b811461028357600080fd5b50565b6000813590506102958161026f565b92915050565b600080604083850312156102b2576102b161026a565b5b60006102c085828601610286565b92505060206102d185828601610286565b9150509250929050565b6000819050919050565b6102ee816102db565b82525050565b600060208201905061030960008301846102e5565b9291505056fea2646970667358221220c0630a22fc62283c3846170be7191cababf9dc3e09171897d218b8107b747ca464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A42E16C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8A42E16C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xAA40EB14 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF3893F27 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xFC27DE12 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x336C96F8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x41F563E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5F0D90C6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x1A0 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x1DB JUMPI DUP2 SWAP1 POP JUMPDEST DUP2 DUP4 LT PUSH2 0x1E6 JUMPI DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 NOT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 NOT ISZERO PUSH2 0x209 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 NOT ISZERO PUSH2 0x21F JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 PUSH2 0x233 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x295 DUP2 PUSH2 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH4 0xA22FC62 0x28 EXTCODECOPY CODESIZE CHAINID OR SIGNEXTEND 0xE7 NOT SHR 0xAB 0xAB 0xF9 0xDC RETURNDATACOPY MULMOD OR XOR SWAP8 0xD2 XOR 0xB8 LT PUSH28 0x747CA464736F6C634300081100330000000000000000000000000000 ",
							"sourceMap": "717:2682:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@btFlip_106": {
									"entryPoint": 492,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFalsy_71": {
									"entryPoint": 440,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isTruthy_58": {
									"entryPoint": 419,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@max_145": {
									"entryPoint": 461,
									"id": 145,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@negation_84": {
									"entryPoint": 399,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeNegation_132": {
									"entryPoint": 546,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unsafe1NegationPart1_97": {
									"entryPoint": 524,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unsafe2NegationPart2_119": {
									"entryPoint": 502,
									"id": 119,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1954:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1125:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1171:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1173:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1173:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1173:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1146:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1155:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1167:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:32:1"
															},
															"nodeType": "YulIf",
															"src": "1135:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1264:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1279:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1283:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1308:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1343:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1354:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1339:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1318:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1308:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1391:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1406:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1410:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1436:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1471:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1482:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1467:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1491:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1446:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1436:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1118:6:1",
														"type": ""
													}
												],
												"src": "1042:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1577:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1588:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1549:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1559:7:1",
														"type": ""
													}
												],
												"src": "1522:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1687:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1710:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1692:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1658:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1665:3:1",
														"type": ""
													}
												],
												"src": "1605:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1837:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1917:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1930:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1941:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1873:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1873:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1799:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1811:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1822:4:1",
														"type": ""
													}
												],
												"src": "1729:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638a42e16c1161005b5780638a42e16c14610117578063aa40eb1414610135578063f3893f2714610153578063fc27de121461017157610088565b8063336c96f81461008d57806341f563e3146100ab5780635f0d90c6146100c95780636d5433e6146100e7575b600080fd5b61009561018f565b6040516100a2919061024f565b60405180910390f35b6100b36101a3565b6040516100c0919061024f565b60405180910390f35b6100d16101b8565b6040516100de919061024f565b60405180910390f35b61010160048036038101906100fc919061029b565b6101cd565b60405161010e919061024f565b60405180910390f35b61011f6101ec565b60405161012c91906102f4565b60405180910390f35b61013d6101f6565b60405161014a919061024f565b60405180910390f35b61015b61020c565b604051610168919061024f565b60405180910390f35b610179610222565b604051610186919061024f565b60405180910390f35b60006001905060006101a057600290505b90565b6000600190506002156101b557600290505b90565b6000600190506000156101ca57600290505b90565b6000818310156101db578190505b8183106101e6578290505b92915050565b6000600219905090565b6000600190506002191561020957600290505b90565b6000600190506000191561021f57600290505b90565b600060019050600261023357600290505b90565b6000819050919050565b61024981610236565b82525050565b60006020820190506102646000830184610240565b92915050565b600080fd5b61027881610236565b811461028357600080fd5b50565b6000813590506102958161026f565b92915050565b600080604083850312156102b2576102b161026a565b5b60006102c085828601610286565b92505060206102d185828601610286565b9150509250929050565b6000819050919050565b6102ee816102db565b82525050565b600060208201905061030960008301846102e5565b9291505056fea2646970667358221220c0630a22fc62283c3846170be7191cababf9dc3e09171897d218b8107b747ca464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A42E16C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8A42E16C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xAA40EB14 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xF3893F27 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xFC27DE12 EQ PUSH2 0x171 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x336C96F8 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x41F563E3 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x5F0D90C6 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x1EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x1A0 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x1DB JUMPI DUP2 SWAP1 POP JUMPDEST DUP2 DUP4 LT PUSH2 0x1E6 JUMPI DUP3 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 NOT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 NOT ISZERO PUSH2 0x209 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 NOT ISZERO PUSH2 0x21F JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x2 PUSH2 0x233 JUMPI PUSH1 0x2 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x236 JUMP JUMPDEST DUP2 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x295 DUP2 PUSH2 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH4 0xA22FC62 0x28 EXTCODECOPY CODESIZE CHAINID OR SIGNEXTEND 0xE7 NOT SHR 0xAB 0xAB 0xF9 0xDC RETURNDATACOPY MULMOD OR XOR SWAP8 0xD2 XOR 0xB8 LT PUSH28 0x747CA464736F6C634300081100330000000000000000000000000000 ",
							"sourceMap": "717:2682:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:207;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:200;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;951:198;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2180:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1590:145;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1741:216;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1368;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1963:211;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1155:207;1198:14;1233:1;1224:10;;1277:1;1267:56;;1308:1;1298:11;;1267:56;1155:207;:::o;745:200::-;788:14;823:1;814:10;;861:1;858:48;;;891:1;881:11;;858:48;745:200;:::o;951:198::-;993:14;1028:1;1019:10;;1065:1;1062:48;;;1095:1;1085:11;;1062:48;951:198;:::o;2180:327::-;2238:15;2297:1;2294;2291:8;2288:56;;;2329:1;2318:12;;2288:56;2373:1;2370;2367:8;2357:110;;2452:1;2441:12;;2357:110;2180:327;;;;:::o;1590:145::-;1631:14;1694:1;1690:6;1680:16;;1590:145;:::o;1741:216::-;1796:14;1831:1;1822:10;;1872:1;1868:6;1865:53;;;1903:1;1893:11;;1865:53;1741:216;:::o;1368:::-;1423:14;1458:1;1449:10;;1499:1;1495:6;1492:53;;;1530:1;1520:11;;1492:53;1368:216;:::o;1963:211::-;2010:14;2045:1;2036:10;;2089:1;2079:56;;2120:1;2110:11;;2079:56;1963:211;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:77::-;1559:7;1588:5;1577:16;;1522:77;;;:::o;1605:118::-;1692:24;1710:5;1692:24;:::i;:::-;1687:3;1680:37;1605:118;;:::o;1729:222::-;1822:4;1860:2;1849:9;1845:18;1837:26;;1873:71;1941:1;1930:9;1926:17;1917:6;1873:71;:::i;:::-;1729:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "167400",
								"executionCost": "214",
								"totalCost": "167614"
							},
							"external": {
								"btFlip()": "340",
								"isFalsy()": "402",
								"isTruthy()": "388",
								"max(uint256,uint256)": "infinite",
								"negation()": "363",
								"safeNegation()": "420",
								"unsafe1NegationPart1()": "412",
								"unsafe2NegationPart2()": "390"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 3399,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0630a22fc62283c3846170be7191cababf9dc3e09171897d218b8107b747ca464736f6c63430008110033",
									".code": [
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "8A42E16C"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "8A42E16C"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "AA40EB14"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "F3893F27"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "FC27DE12"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "336C96F8"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "41F563E3"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "5F0D90C6"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "6D5433E6"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 3399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1155,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1155,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 745,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 745,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 951,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2180,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2180,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1590,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1590,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1741,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1741,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1368,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1368,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1963,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1963,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1267,
											"end": 1323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1323,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1267,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 745,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 788,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 814,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 858,
											"end": 906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 858,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 858,
											"end": 906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 891,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 881,
											"end": 892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 906,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 858,
											"end": 906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 993,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1062,
											"end": 1110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1110,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1062,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 1149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2299,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2288,
											"end": 2344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2344,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2288,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2357,
											"end": 2467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2357,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1868,
											"end": 1874,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1893,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 1904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1520,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1520,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1492,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2010,
											"end": 2024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2079,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2079,
											"end": 2135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2079,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 2174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1170,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1173,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1173,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1135,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1318,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1318,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1491,
											"end": 1498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1446,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1446,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1599,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1522,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1605,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1692,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1692,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1687,
											"end": 1690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1873,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1944,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1873,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/2_BasicOperation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"btFlip()": "8a42e16c",
							"isFalsy()": "5f0d90c6",
							"isTruthy()": "41f563e3",
							"max(uint256,uint256)": "6d5433e6",
							"negation()": "336c96f8",
							"safeNegation()": "fc27de12",
							"unsafe1NegationPart1()": "f3893f27",
							"unsafe2NegationPart2()": "aa40eb14"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"btFlip\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFalsy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTruthy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"negation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeNegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unsafe1NegationPart1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unsafe2NegationPart2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/2_BasicOperation.sol\":\"IfComparison\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/2_BasicOperation.sol\":{\"keccak256\":\"0x2a89e222145412e66a155da3824252a8889a8fe388ff5d61fc8842c709680413\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b124a291341c11f7e73a321079ab36fca8448d67242ecabed4b8117adced148\",\"dweb:/ipfs/QmRHhKpFxFvhPRwKtXN5qDGPaJtgFSUaj6TQk9YoHszv8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/2_BasicOperation.sol": {
				"ast": {
					"absolutePath": "contracts/2_BasicOperation.sol",
					"exportedSymbols": {
						"BasicOperation": [
							45
						],
						"IfComparison": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BasicOperation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "BasicOperation",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "151:400:0",
										"statements": [
											{
												"expression": {
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "161:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "170:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "161:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "161:13:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "193:352:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "207:34:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "num",
																				"nodeType": "YulIdentifier",
																				"src": "230:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "235:1:0",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "239:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:19:0"
															},
															"variables": [
																{
																	"name": "halfNum",
																	"nodeType": "YulTypedName",
																	"src": "211:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:0",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "263:1:0",
																"type": "",
																"value": "2"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "258:1:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "360:175:0",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "444:77:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "466:11:0",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "476:1:0",
																						"type": "",
																						"value": "0"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "466:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulBreak",
																					"src": "498:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "num",
																							"nodeType": "YulIdentifier",
																							"src": "435:3:0"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "440:1:0"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nodeType": "YulIdentifier",
																						"src": "431:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "431:11:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "424:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "424:19:0"
																		},
																		"nodeType": "YulIf",
																		"src": "421:100:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:0"
																	},
																	{
																		"name": "halfNum",
																		"nodeType": "YulIdentifier",
																		"src": "304:7:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "298:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:14:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "313:46:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "331:14:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "340:1:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "336:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "336:9:0"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "331:1:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "281:16:0",
																"statements": []
															},
															"src": "277:258:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "230:3:0",
														"valueSize": 1
													},
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "435:3:0",
														"valueSize": 1
													},
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "466:6:0",
														"valueSize": 1
													}
												],
												"id": 12,
												"nodeType": "InlineAssembly",
												"src": "184:361:0"
											}
										]
									},
									"functionSelector": "42703494",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPrime",
									"nameLocation": "96:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "112:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "104:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:13:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "138:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:13:0"
									},
									"scope": 45,
									"src": "87:464:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "587:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"id": 18,
																"name": "isPrime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) pure returns (bool)"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "605:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "597:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "597:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "642:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"id": 24,
																"name": "isPrime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "634:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) pure returns (bool)"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "634:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "626:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "626:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "663:11:0",
															"subExpression": {
																"arguments": [
																	{
																		"hexValue": "34",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "672:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	],
																	"id": 30,
																	"name": "isPrime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "664:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "655:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "655:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "693:12:0",
															"subExpression": {
																"arguments": [
																	{
																		"hexValue": "3135",
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "702:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		}
																	],
																	"id": 37,
																	"name": "isPrime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "694:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "694:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "685:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "685:21:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "566:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:0:0"
									},
									"scope": 45,
									"src": "557:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "57:658:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IfComparison",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IfComparison",
							"nameLocation": "726:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "804:141:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "814:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "814:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "844:72:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "863:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "881:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "891:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "881:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "861:1:0",
																"type": "",
																"value": "2"
															},
															"nodeType": "YulIf",
															"src": "858:48:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 48,
														"isOffset": false,
														"isSlot": false,
														"src": "881:6:0",
														"valueSize": 1
													}
												],
												"id": 54,
												"nodeType": "InlineAssembly",
												"src": "835:81:0"
											},
											{
												"expression": {
													"id": 55,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 49,
												"id": 56,
												"nodeType": "Return",
												"src": "925:13:0"
											}
										]
									},
									"functionSelector": "41f563e3",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTruthy",
									"nameLocation": "754:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:16:0"
									},
									"scope": 146,
									"src": "745:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1009:140:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1019:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1019:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1019:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1048:72:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1067:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1085:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1095:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1085:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1065:1:0",
																"type": "",
																"value": "0"
															},
															"nodeType": "YulIf",
															"src": "1062:48:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 61,
														"isOffset": false,
														"isSlot": false,
														"src": "1085:6:0",
														"valueSize": 1
													}
												],
												"id": 67,
												"nodeType": "InlineAssembly",
												"src": "1039:81:0"
											},
											{
												"expression": {
													"id": 68,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 61,
													"src": "1136:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 62,
												"id": 69,
												"nodeType": "Return",
												"src": "1129:13:0"
											}
										]
									},
									"functionSelector": "5f0d90c6",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFalsy",
									"nameLocation": "960:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:16:0"
									},
									"scope": 146,
									"src": "951:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1214:148:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1224:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1224:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1224:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1253:80:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1280:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1298:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1308:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1298:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1277:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:9:0"
															},
															"nodeType": "YulIf",
															"src": "1267:56:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 74,
														"isOffset": false,
														"isSlot": false,
														"src": "1298:6:0",
														"valueSize": 1
													}
												],
												"id": 80,
												"nodeType": "InlineAssembly",
												"src": "1244:89:0"
											},
											{
												"expression": {
													"id": 81,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 75,
												"id": 82,
												"nodeType": "Return",
												"src": "1342:13:0"
											}
										]
									},
									"functionSelector": "336c96f8",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "negation",
									"nameLocation": "1164:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:16:0"
									},
									"scope": 146,
									"src": "1155:207:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1439:145:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1449:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1458:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1449:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1449:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1478:77:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1502:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1520:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1530:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1520:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:6:0"
															},
															"nodeType": "YulIf",
															"src": "1492:53:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "1520:6:0",
														"valueSize": 1
													}
												],
												"id": 93,
												"nodeType": "InlineAssembly",
												"src": "1469:86:0"
											},
											{
												"expression": {
													"id": 94,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 87,
													"src": "1571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 95,
												"nodeType": "Return",
												"src": "1564:13:0"
											}
										]
									},
									"functionSelector": "f3893f27",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafe1NegationPart1",
									"nameLocation": "1377:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1423:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:16:0"
									},
									"scope": 146,
									"src": "1368:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1647:88:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1666:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1680:16:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:0",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1690:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:6:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "1680:6:0",
														"valueSize": 1
													}
												],
												"id": 102,
												"nodeType": "InlineAssembly",
												"src": "1657:49:0"
											},
											{
												"expression": {
													"id": 103,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "1722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 101,
												"id": 104,
												"nodeType": "Return",
												"src": "1715:13:0"
											}
										]
									},
									"functionSelector": "8a42e16c",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "btFlip",
									"nameLocation": "1599:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:16:0"
									},
									"scope": 146,
									"src": "1590:145:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1812:145:0",
										"statements": [
											{
												"expression": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1822:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1822:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "1822:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1851:77:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1875:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1893:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1903:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1893:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:1:0",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1868:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:6:0"
															},
															"nodeType": "YulIf",
															"src": "1865:53:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "1893:6:0",
														"valueSize": 1
													}
												],
												"id": 115,
												"nodeType": "InlineAssembly",
												"src": "1842:86:0"
											},
											{
												"expression": {
													"id": 116,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 109,
													"src": "1944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 110,
												"id": 117,
												"nodeType": "Return",
												"src": "1937:13:0"
											}
										]
									},
									"functionSelector": "aa40eb14",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafe2NegationPart2",
									"nameLocation": "1750:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1804:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:16:0"
									},
									"scope": 146,
									"src": "1741:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2026:148:0",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 124,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2036:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2036:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2036:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2065:80:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2092:43:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2110:11:0",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2120:1:0",
																			"type": "",
																			"value": "2"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:1:0",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2082:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:9:0"
															},
															"nodeType": "YulIf",
															"src": "2079:56:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 122,
														"isOffset": false,
														"isSlot": false,
														"src": "2110:6:0",
														"valueSize": 1
													}
												],
												"id": 128,
												"nodeType": "InlineAssembly",
												"src": "2056:89:0"
											},
											{
												"expression": {
													"id": 129,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "2161:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 123,
												"id": 130,
												"nodeType": "Return",
												"src": "2154:13:0"
											}
										]
									},
									"functionSelector": "fc27de12",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeNegation",
									"nameLocation": "1972:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:2:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:16:0"
									},
									"scope": 146,
									"src": "1963:211:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2255:252:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2274:203:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2300:44:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2318:12:0",
																		"value": {
																			"name": "y",
																			"nodeType": "YulIdentifier",
																			"src": "2329:1:0"
																		},
																		"variableNames": [
																			{
																				"name": "maximum",
																				"nodeType": "YulIdentifier",
																				"src": "2318:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2294:1:0"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2297:1:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2291:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:8:0"
															},
															"nodeType": "YulIf",
															"src": "2288:56:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2377:90:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2441:12:0",
																		"value": {
																			"name": "x",
																			"nodeType": "YulIdentifier",
																			"src": "2452:1:0"
																		},
																		"variableNames": [
																			{
																				"name": "maximum",
																				"nodeType": "YulIdentifier",
																				"src": "2441:7:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2370:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2373:1:0"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2367:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2367:8:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:16:0"
															},
															"nodeType": "YulIf",
															"src": "2357:110:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "2318:7:0",
														"valueSize": 1
													},
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "2441:7:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "2294:1:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "2370:1:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "2452:1:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "2297:1:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "2329:1:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "2373:1:0",
														"valueSize": 1
													}
												],
												"id": 141,
												"nodeType": "InlineAssembly",
												"src": "2265:212:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "maximum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 139,
													"src": "2493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 143,
												"nodeType": "Return",
												"src": "2486:14:0"
											}
										]
									},
									"functionSelector": "6d5433e6",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2189:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2201:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2193:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2212:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2204:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:22:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "maximum",
												"nameLocation": "2246:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2238:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:17:0"
									},
									"scope": 146,
									"src": "2180:327:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "717:2682:0",
							"usedErrors": []
						}
					],
					"src": "32:3368:0"
				},
				"id": 0
			}
		}
	}
}